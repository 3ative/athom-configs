substitutions:
  device_name: "athom-mini-switch"
  friendly_name: "Athom Mini Switch"
  project_name: "athom.mini-switch"
  project_version: "1.0"

esphome:
  name: "${device_name}"
  name_add_mac_suffix: true
  platform: ESP8266
  board: esp8285
  project:
    name: "${project_name}"
    version: "${project_version}"

api:

ota:

logger:
  baud_rate: 0

web_server:
  port: 80

wifi:
  ap: {} # This spawns an AP with the device name and mac address with no password.

captive_portal:

switch:
  - platform: restart
    id: restart_switch
    name: "${friendly_name} Restart"

output:
  - platform: gpio
    id: relay_output
    pin: GPIO13

light:
  - platform: status_led
    name: "${friendly_name} Blue LED"
    disabled_by_default: true
    pin:
      number: GPIO4
      inverted: true

  - platform: binary
    id: relay
    output: relay_output
    name: "${friendly_name} Light"
    restore_mode: RESTORE_DEFAULT_ON

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime Sensor"

binary_sensor:
  - platform: status
    name: "${friendly_name} Status"

  # Button on mini switch
  - platform: gpio
    id: button
    name: "${friendly_name} Button"
    disabled_by_default: true
    pin:
      number: GPIO3
      inverted: true
      mode: INPUT_PULLUP
    on_multi_click:
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.2s
        then:
          - light.toggle: relay
      - timing:
          - ON for at least 4s
        then:
          - switch.turn_on: restart_switch

  # Wired switch
  - platform: gpio
    id: the_switch
    name: "${friendly_name} Switch"
    disabled_by_default: true
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
    on_state:
      - light.toggle: relay

    on_multi_click:
      - timing:
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at most 0.5s
        then:
          - switch.turn_on: restart_switch
